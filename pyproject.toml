[project]
name = "gfw-data-api"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = "~= 3.10.0"
dependencies = [
    "aenum",
    "aiofiles",
    "aiohttp",
    "alembic",
    "arq",
    "asgi_lifespan",
    "async-lru",
    "asyncpg",
    "boto3",
    "botocore",
    "email-validator",
    "fastapi",
    "geoalchemy2<0.12",
    "geojson",
    "gino",
    "gino_starlette",
    "google-cloud-storage",
    "gunicorn",
    "httpcore",
    "httpx",
    "httpx-auth",
    "newrelic",
    "numpy<2",
    "openapi_spec_validator",
    "orjson",
    "packaging",
    "pendulum<3",
    "pglast<2",
    "psutil",
    "psycopg2",
    "pydantic<2",
    "pyproj",
    "python-multipart",
    "retrying",
    "shapely",
    "sqlalchemy<1.4",
    "sqlalchemy-utils",
    "starlette",
    "typer",
    "unidecode",
    "uvicorn[standard]",
]

[dependency-groups]
dev = [
    "asgi-lifespan",
    "docker",
    "geopandas", # Needed by pixetl in batch script test
    # Pixetl is already installed in the pixetl image that's run in Batch,
    # this is to enable tests to run in the test container:
    "gfw-pixetl",
    "moto[awslambda, batch, ec2, s3, secretsmanager]<5",
    "pandas<2.2", # Needed by pixetl in batch script test
    "pre-commit",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-timeout",
    "pytest-unordered>=0.6.1",
    "rasterio==1.3.11",
    "retrying", # Needed by pixetl in batch script test
]

[tool.setuptools]
packages = ["app", "batch"]

[tool.uv.sources]
gfw-pixetl = { git = "https://github.com/wri/gfw_pixetl.git", branch = "develop" }
