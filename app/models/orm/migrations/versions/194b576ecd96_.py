"""empty message.

Revision ID: 194b576ecd96
Revises: a3519919b1b6
Create Date: 2020-07-08 14:27:53.296531
"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "194b576ecd96"  # pragma: allowlist secret
down_revision = "a3519919b1b6"  # pragma: allowlist secret
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "assets",
        "change_log",
        existing_type=postgresql.ARRAY(postgresql.JSONB(astext_type=sa.Text())),
        nullable=False,
        existing_server_default=sa.text("ARRAY[]::jsonb[]"),
    )
    op.alter_column(
        "assets",
        "creation_options",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        nullable=False,
        existing_server_default=sa.text("'{}'::jsonb"),
    )
    op.alter_column(
        "assets",
        "fields",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        nullable=False,
        existing_server_default=sa.text("'[]'::jsonb"),
    )
    op.alter_column(
        "assets",
        "metadata",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        nullable=False,
        existing_server_default=sa.text("'{}'::jsonb"),
    )
    op.alter_column(
        "assets",
        "stats",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        nullable=False,
        existing_server_default=sa.text("'{}'::jsonb"),
    )
    op.execute(
        """UPDATE assets
                SET creation_options = assets.creation_options || jsonb_build_object('source_uri', versions.source_uri) || jsonb_build_object('source_type', versions.source_type)
            FROM versions WHERE assets.dataset = versions.dataset AND assets.version = versions.version AND assets.is_default = true;"""
    )

    op.execute(
        """UPDATE assets
        SET creation_options = creation_options - 'src_driver' || jsonb_build_object('source_driver', creation_options->'src_driver')
        WHERE creation_options ? 'src_driver';"""
    )

    op.drop_column("versions", "source_uri")
    op.drop_column("versions", "source_type")
    op.drop_column("versions", "creation_options")
    op.drop_column("versions", "has_geostore")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "versions",
        sa.Column(
            "has_geostore",
            sa.BOOLEAN(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "versions",
        sa.Column(
            "creation_options",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default=sa.text("'{}'::jsonb"),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "versions",
        sa.Column("source_type", sa.VARCHAR(), autoincrement=False, nullable=True),
    )

    op.add_column(
        "versions",
        sa.Column(
            "source_uri",
            postgresql.ARRAY(sa.VARCHAR()),
            autoincrement=False,
            nullable=True,
        ),
    )

    op.execute(
        """
        UPDATE versions
            SET source_type = co.source_type,
                source_uri = co.source_uri
            FROM assets,
                jsonb_to_record(assets.creation_options) AS co(source_uri varchar[], source_type varchar)
            WHERE assets.dataset = versions.dataset AND assets.version = versions.version AND assets.is_default = true;"""
    )
    op.execute(
        """UPDATE assets
                SET creation_options = creation_options - 'source_type' - 'source_uri'
                WHERE is_default = true;"""
    )

    op.execute(
        """UPDATE assets
            SET creation_options = creation_options - 'source_driver' || jsonb_build_object('src_driver', creation_options->'source_driver')
            WHERE creation_options ? 'source_driver';"""
    )

    op.execute(
        """UPDATE versions
                SET creation_options = assets.creation_options
            FROM assets where assets.dataset = versions.dataset and assets.version = versions.version and assets.is_default = true;"""
    )

    # op.alter_column(
    #     "versions", "source_type", existing_type=sa.VARCHAR(), nullable=False,
    # )

    op.alter_column(
        "assets",
        "stats",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        nullable=True,
        existing_server_default=sa.text("'{}'::jsonb"),
    )
    op.alter_column(
        "assets",
        "metadata",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        nullable=True,
        existing_server_default=sa.text("'{}'::jsonb"),
    )
    op.alter_column(
        "assets",
        "fields",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        nullable=True,
        existing_server_default=sa.text("'[]'::jsonb"),
    )
    op.alter_column(
        "assets",
        "creation_options",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        nullable=True,
        existing_server_default=sa.text("'{}'::jsonb"),
    )
    op.alter_column(
        "assets",
        "change_log",
        existing_type=postgresql.ARRAY(postgresql.JSONB(astext_type=sa.Text())),
        nullable=True,
        existing_server_default=sa.text("ARRAY[]::jsonb[]"),
    )
    # ### end Alembic commands ###
