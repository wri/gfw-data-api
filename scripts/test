#!/bin/bash

set -e


# Default values
POSITIONAL=()
BUILD=true
# extracting cmd line arguments
while [[ $# -gt 0 ]]
do
  key="$1"

  case $key in
      --no_build)
      BUILD=false
      shift # past argument
      ;;
      --without-hanging-tests)
      HANGING=--without-hanging-tests
      shift # past argument
      ;;
      --with-slow-tests)
      SLOW=--with-slow-tests
      shift # past argument
      ;;
      *)    # unknown option
      POSITIONAL+=("$1") # save it in an array for later
      shift # past argument
      ;;
  esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters


if [ "${BUILD}" = true ]; then
  docker build -t batch_gdal-python_test . -f batch/gdal-python.dockerfile
  docker build -t batch_postgresql-client_test . -f batch/postgresql-client.dockerfile
  docker build -t batch_tile_cache_test . -f batch/tile_cache.dockerfile
  docker build -t pixetl_test . -f batch/pixetl.dockerfile
  docker-compose -f docker-compose.test.yml --project-name gfw-data-api_test build --no-cache app_test
fi

set +e
docker-compose -f docker-compose.test.yml --project-name gfw-data-api_test run --rm --name app_test app_test $HANGING $SLOW tests/"$*"
exit_code=$?
docker-compose -f docker-compose.test.yml --project-name gfw-data-api_test down --remove-orphans
exit $exit_code
