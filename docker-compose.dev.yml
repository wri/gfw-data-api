version: "3"

services:
  app:
    build:
      context: .
      args:
        - ENV=dev
    container_name: app_dev
    restart: on-failure
    volumes:
      - $HOME/.aws:/root/.aws:ro
      - ./app:/app/app
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - DB_HOST=database
      - DATABASE=geostore
      - DB_USER=gfw
      - DB_PASSWORD=postgres  # pragma: allowlist secret
      - DB_PORT=5432
      - DB_HOST_RO=database
      - DATABASE_RO=geostore
      - DB_USER_RO=gfw_readonly
      - DB_PASSWORD_RO=readonly  # pragma: allowlist secret
      - DB_PORT_RO=5432
      - AWS_DEFAULT_PROFILE=gfw-dev
      - LOG_LEVEL=debug
      - POSTGRESQL_CLIENT_JOB_DEFINITION=postgres_client_jd
      - GDAL_PYTHON_JOB_DEFINITION=gdal_python_jd
      - TILE_CACHE_JOB_DEFINITION=tile_cache_jd
      - PIXETL_JOB_DEFINITION=pixetl_jd
      - AURORA_JOB_QUEUE=aurora_jq
      - DATA_LAKE_JOB_QUEUE=data_lake_jq
      - TILE_CACHE_JOB_QUEUE=tile_cache_jq
      - TILE_CACHE_URL=https://tiles.globalforestwatch.org
      - TILE_CACHE_CLOUDFRONT_ID=tile_cache_cloudfrond_id
      - TILE_CACHE_CLUSTER=tile_cache_cluster
      - TILE_CACHE_SERVICE=tile_cache_service
      - PIXETL_JOB_QUEUE=pixetl_jq
      - API_URL=http://app_dev:80
    ports:
      - 8008:80
    entrypoint: wait_for_postgres.sh /start-reload.sh
    depends_on:
      - database

  database:
    container_name: gfw-data-api-database
    image: postgis/postgis:11-3.0-alpine
    restart: on-failure
    ports:
      - 54320:5432
    environment:
      - POSTGRES_DB=geostore
      - POSTGRES_USER=gfw
      - POSTGRES_PASSWORD=postgres  # pragma: allowlist secret
    volumes:
      - database_data:/var/lib/postgresql/data

volumes:
  database_data:
