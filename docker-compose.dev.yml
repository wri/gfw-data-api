version: "3"

services:
  app:
    build:
      context: .
      args:
        - ENV=dev
    container_name: app_dev
    restart: on-failure
    volumes:
      - $HOME/.aws:/root/.aws:ro
      - ./app:/app/app
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - 'DB_WRITER_SECRET={"host": "database_12", "port": 5432, "username": "gfw", "password": "postgres", "dbname": "geostore"}'
      - DB_HOST=database_12
      - DATABASE=geostore
      - DB_USER=gfw
      - DB_PASSWORD=postgres # pragma: allowlist secret
      - DB_PORT=5432
      - DB_HOST_RO=database_12
      - DATABASE_RO=geostore
      - DB_USER_RO=gfw_readonly
      - DB_PASSWORD_RO=readonly # pragma: allowlist secret
      - DB_PORT_RO=5432
      - AWS_DEFAULT_PROFILE=gfw-dev
      - LOG_LEVEL=debug
      - POSTGRESQL_CLIENT_JOB_DEFINITION=postgres_client_jd
      - GDAL_PYTHON_JOB_DEFINITION=gdal_python_jd
      - TILE_CACHE_JOB_DEFINITION=tile_cache_jd
      - PIXETL_JOB_DEFINITION=pixetl_jd
      - AURORA_JOB_QUEUE=aurora_jq
      - AURORA_JOB_QUEUE_FAST=aurora_fast_jq
      - DATA_LAKE_JOB_QUEUE=data_lake_jq
      - TILE_CACHE_JOB_QUEUE=tile_cache_jq
      - TILE_CACHE_URL=https://tiles.globalforestwatch.org
      - TILE_CACHE_CLOUDFRONT_ID=tile_cache_cloudfront_id
      - TILE_CACHE_CLUSTER=tile_cache_cluster
      - TILE_CACHE_SERVICE=tile_cache_service
      - PIXETL_JOB_QUEUE=pixetl_jq
      - COGIFY_JOB_QUEUE=cogify_jq
      - API_URL=http://app_dev:80
      - RASTER_ANALYSIS_LAMBDA_NAME=raster-analysis-tiled_raster_analysis-default
      - RW_API_URL=https://staging-api.resourcewatch.org
      - GOOGLE_APPLICATION_CREDENTIALS=/root/.gcs/private_key.json
      - PIXETL_CORES=4
      - MAX_CORES=4
      - NUM_PROCESSES=4
      - PIXETL_MAX_MEM=3800
      - MAX_MEM=3800
      - API_GATEWAY_ID=o0qr02sbjg
      - API_GATEWAY_INTERNAL_USAGE_PLAN=7hfzrv
      - API_GATEWAY_EXTERNAL_USAGE_PLAN=f56y9r
      - API_GATEWAY_STAGE_NAME=deploy_feature_rate_limiting
      - NAME_SUFFIX=
    ports:
      - 8008:80
    entrypoint: wait_for_postgres.sh /start-reload.sh
    depends_on:
      - database_12

  database_12:
    container_name: gfw-data-api-database_12
    image: postgis/postgis:12-3.3-alpine
    restart: on-failure
    ports:
      - 54320:5432
    environment:
      - POSTGRES_DB=geostore
      - POSTGRES_USER=gfw
      - POSTGRES_PASSWORD=postgres # pragma: allowlist secret
    volumes:
      - database_data_12:/var/lib/postgresql/data

volumes:
  database_data_12:
